AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Simple Rekommend web service for retrieving questions and resources
Parameters:
  Stage:
    Type: String
    Default: dev
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName:
        Fn::Join:
        - ''
        - [Ref: Stage, -rekommend]
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders: ['*']
          AllowedMethods: [GET]
          AllowedOrigins: ['*']
          ExposedHeaders: [Date]
          Id: rekommendCORSGetRule
          MaxAge: '3600'
        - AllowedHeaders: ['*']
          AllowedMethods: [PUT]
          AllowedOrigins: ['*']
          ExposedHeaders: [Date]
          Id: rekommendCORSPutRule
          MaxAge: '3600'
  
  Table:
    Type: AWS::Serverless::SimpleTable
    TableName:
      Fn::Join:
      - ''
      - [Ref: Stage, -rekommend]

  RekommendApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Stage
      Cors:
        AllowMethods: "'GET'"
        AllowHeaders: "'authorization,content-type'"
        AllowOrigin: "'*'"
      OpenApiVersion: '2.0'

  RekommendEditorApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Stage
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'authorization,content-type'"
        AllowOrigin: "'*'"
      OpenApiVersion: '2.0'

  CompileJourney:
    Type: AWS::Serverless::Function
    Properties:
      Handler: journey.compile
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        CompileJourney:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendApi
            Path: /journey
            Method: post

  GetJourneys:
    Type: AWS::Serverless::Function
    Properties:
      Handler: journey.get
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        FindPlayerJourney:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendApi
            Path: /journeys/{journeyid}
            Method: get
        ListPlayerJourneys:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendApi
            Path: /journeys
            Method: get
        FindJourney:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journeys/{journeyid}
            Method: get
        ListJourneys:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journeys
            Method: get

  CreateJourney:
    Type: AWS::Serverless::Function
    Properties:
      Handler: journey.create
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        Journey:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journeys
            Method: post

  UpdateJourney:
    Type: AWS::Serverless::Function
    Properties:
      Handler: journey.update
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        Journey:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journeys/{journeyid}
            Method: put

  DeleteJourneys:
    Type: AWS::Serverless::Function
    Properties:
      Handler: journey.delete
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        Journey:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journeys/{journeyid}
            Method: delete

  GetResources:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resource.get
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        FindPlayerResource:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendApi
            Path: /resource/{resourceid}
            Method: get
        ListPlayerResources:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendApi
            Path: /resources
            Method: get
        FindResource:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resources/{resourceid}
            Method: get
        ListResources:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resources
            Method: get

  CreateResource:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resource.create
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        Resource:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resources
            Method: post

  UpdateResource:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resource.update
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        Resource:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resources/{resourceid}
            Method: put

  DeleteResource:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resource.delete
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        Resource:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resources/{resourceid}
            Method: delete

  SetContent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: config.setContent
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        SetContent:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendEditorApi
            Path: /content/{contentId}
            Method: put
          
  GetContent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: config.loadContent
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        LoadContent:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendApi
            Path: /content/{contentId}
            Method: get
        LoadEditorContent:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendEditorApi
            Path: /content/{contentId}
            Method: get

  SetTheme:
    Type: AWS::Serverless::Function
    Properties:
      Handler: config.setTheme
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        SetTheme:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendEditorApi
            Path: /theme
            Method: put
                    
  GetBanners:
    Type: AWS::Serverless::Function
    Properties:
      Handler: config.loadBanners
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        LoadTheme:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendApi
            Path: /banners
            Method: get

  GetTheme:
    Type: AWS::Serverless::Function
    Properties:
      Handler: config.loadTheme
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: Table
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Table
      Events:
        LoadTheme:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendApi
            Path: /theme
            Method: get
        LoadEditorTheme:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendEditorApi
            Path: /theme
            Method: get

  SetFileURL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: file.setFileURL
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - S3WritePolicy:
          BucketName:
            Ref: Bucket
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: Bucket
      Events:
        SetFileURL:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendEditorApi
            Path: /file/{filename}
            Method: post

  GetFileURL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: file.getFileURL
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - S3ReadPolicy:
          BucketName:
            Ref: Bucket
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: Bucket
      Events:
        GetFileURL:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendApi
            Path: /image/{filename}
            Method: get
        GetFileURLEditor:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendEditorApi
            Path: /image/{filename}
            Method: get

  DeleteFile:
    Type: AWS::Serverless::Function
    Properties:
      Handler: file.deleteFile
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
      - S3CrudPolicy:
          BucketName:
            Ref: Bucket
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: Bucket
      Events:
        DeleteFileURL:
          Type: Api
          Properties:
            RestApiId: 
              Ref: RekommendEditorApi
            Path: /file/{filename}
            Method: delete
Outputs:
  BucketName:
    Description: Name of the sample Amazon S3 bucket with CORS enabled.
    Value: !Ref 'Bucket'
  ApiURL:
    Description: Player API endpoint URL
    Value:
      Fn::Sub: https://${RekommendApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
  EditorApiURL:
    Description: Editor API endpoint URL
    Value:
      Fn::Sub: https://${RekommendEditorApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
